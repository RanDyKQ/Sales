{"remainingRequest":"G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\1、毕设作品---手机销售平台\\sales\\src\\views\\checkout.vue?vue&type=template&id=fd530f40&","dependencies":[{"path":"G:\\1、毕设作品---手机销售平台\\sales\\src\\views\\checkout.vue","mtime":1604990426000},{"path":"G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}