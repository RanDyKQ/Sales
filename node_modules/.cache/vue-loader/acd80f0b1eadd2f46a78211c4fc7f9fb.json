{"remainingRequest":"E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\1、毕设作品---手机销售平台\\sales\\src\\components\\login_register.vue?vue&type=template&id=a984f76e&scoped=true&","dependencies":[{"path":"E:\\1、毕设作品---手机销售平台\\sales\\src\\components\\login_register.vue","mtime":1609204528000},{"path":"E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\1、毕设作品---手机销售平台\\sales\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}